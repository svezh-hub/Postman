{
	"info": {
		"_postman_id": "25fb825f-3f70-4960-96d4-9b84f4ba0193",
		"name": "HW_3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set('token', jsonData.token);\r",
							"\r",
							"console.log (jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Daniil",
							"type": "default"
						},
						{
							"key": "password",
							"value": "wefsdfsdg",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Статус код 200', function () {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    'type':'object',\r",
							"    'properties':{\r",
							"        'person': {\r",
							"            'type':'object',\r",
							"            'properties':{\r",
							"                'u_age': { 'type':'number' },\r",
							"                'u_name': {\r",
							"                    'type': 'array',\r",
							"                    'items': [\r",
							"                        {'type': 'string'},\r",
							"                        {'type': 'number'},\r",
							"                        {'type': 'number'}\r",
							"                    ]\r",
							"                },\r",
							"                'u_salary_1_5_year': {'type': 'number'}\r",
							"            },\r",
							"        },\r",
							"            'qa_salary_after_12_months': {'type': 'number'},\r",
							"            'qa_salary_after_6_months': {'type': 'number'},\r",
							"            'start_qa_salary': {'type': 'number'}\r",
							"    }\r",
							"};\r",
							"pm.test(\"Проверка структуры json в ответе\", () => {\r",
							"    pm.response.to.have.jsonSchema(schema)\r",
							"});\r",
							"\r",
							"//В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"var jsonData = pm.response.json();\r",
							"pm.test('2', () => {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(jsonData.start_qa_salary*2)\r",
							"}); \r",
							"pm.test('2.9', () => {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(jsonData.start_qa_salary*2.9)\r",
							"});\r",
							"pm.test('4', () => {\r",
							"    pm.expect(jsonData.person.u_salary_1_5_year).to.eql(jsonData.start_qa_salary*4)\r",
							"});\r",
							"\r",
							"//Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user\r",
							"pm.environment.set('salary',jsonData.person.u_salary_1_5_year);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": 24,\r\n    \"salary\": 30000,\r\n    \"name\": \"Daniil\",\r\n    \"auth_token\": \"{{token}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user_info",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "/new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Проверка структуры json в ответе\r",
							"var schema = {\r",
							"    \"type\":\"object\",\r",
							"    \"properties\":{\r",
							"        \"age\":{\"type\":\"integer\"},\r",
							"        \"name\":{\"type\":\"string\"},\r",
							"        \"salary\":{\r",
							"            \"type\":\"array\",\r",
							"            \"items\":[\r",
							"                {\"type\":\"integer\"},\r",
							"                {\"type\":\"string\"},\r",
							"                {\"type\":\"string\"}\r",
							"            ]\r",
							"        }\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.test(\"Проверка стуркутры json в ответе\", function () {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"//В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test('коэффициент 2', () => {\r",
							"    pm.expect(+jsonData.salary[1]).to.eql(jsonData.salary[0]*2)\r",
							"});\r",
							"\r",
							"pm.test('коэффициент 3', () => {\r",
							"    pm.expect(+jsonData.salary[2]).to.eql(jsonData.salary[0]*3)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test('проверить, что 2-й элемент массива salary больше 0-го', () => {\r",
							"    pm.expect(+jsonData.salary[2]).to.be.above(jsonData.salary[0])\r",
							"});\r",
							"\r",
							"pm.test('проверить, что 2-й элемент массива salary больше 1-го', () => {\r",
							"    pm.expect(+jsonData.salary[2]).to.be.above(+jsonData.salary[1])\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "30000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Daniil",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					],
					"query": [
						{
							"key": "age",
							"value": "24",
							"disabled": true
						},
						{
							"key": "salary",
							"value": "30000",
							"disabled": true
						},
						{
							"key": "name",
							"value": "'Daniil'",
							"disabled": true
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}